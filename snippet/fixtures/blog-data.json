[
  {
    "model": "snippet.blog",
    "pk":1,
    "fields": {
      "slug": "superfici-minimali-e-bolle-di-sapone",
      "status": "pubblicato",
      "user": 1,
      "title": "Superfici minimali e bolle di sapone",
      "content": "Il problema di trovare la figura piana capace di massimizzare l'area a uguale perimetro è stato risolto da Pappo nel 390 A.D..\n\nLa **first variation of area formula** è data dalla formula\n\n.. latex:: {d\\,A\\over dt} = H A\n\ndove H è rappresenta la curvatura media. In base a questa formula, una superficie rappresenta un punto di minimo (o massimo) solo nel caso in cui la sua curvatura media si annulli.",
      "creation_date": "2009-07-16 19:38:48.080528",
      "tags": "minimal surface,soap bubble, math"
    }
  },
  {
    "pk": 1, 
    "model": "comments.comment", 
    "fields": {
      "comment": "this is bull****!!!\n\nAre you sure about which you are saying?", 
      "user_url": "http://packz.noblogs.org/", 
      "submit_date": "2009-07-18 13:19:47", 
      "ip_address": "127.0.0.1", 
      "object_pk": "1", 
      "site": 1, 
      "is_removed": false, 
      "user": null, 
      "content_type": 14, 
      "is_public": true, 
      "user_name": "packz", 
      "user_email": "packz@autistici.org"
    }
  },
  {
    "model": "snippet.blog",
    "pk":2,
    "fields": {
      "slug": "qualche-test-di-codice",
      "status": "bozza",
      "user": 1,
      "title": "Qualche test di codice",
      "content": "Una tag che stranamente manca tra quelli presenti di default nel sistema di template di Django è quella che elimina caratteri come newline; nel caso per esempio che si voglia creare una template per esportare i dati di un database in format CSV si necessita di inserire un lungo elenco di variabili separate da virgole, magari con filter in pipeline, che rendono template stesso praticamente illeggibile (e non è possibile renderlo più umano senza inserire un field per linea siccome il formato CSV usa il newline come carattere di fine linea).\nUna soluzione è appunto quella di creare una tag chiamata strip_newline\n\n.. code-block:: python\n\n from django import template\n\n register = template.Library()\n @register.tag(name='strip_newline')\n def do_strip_newline(parser, token):\n \tnodelist = parser.parse(('endstrip_newline',))\n \tparser.delete_first_token()\n \treturn StripNewlineNode(nodelist)\n\n class StripNewlineNode(template.Node):\n \tdef __init__(self, nodelist):\n \t\tself.nodelist = nodelist\n\n \tdef render(self, context):\n \t\toutput = self.nodelist.render(context)\n \t\treturn output.replace('\\n', '')\n\nquesto è quanto",
      "creation_date": "2009-10-20 19:38:48.080528",
      "tags": "test, code"
    }
  }
]
